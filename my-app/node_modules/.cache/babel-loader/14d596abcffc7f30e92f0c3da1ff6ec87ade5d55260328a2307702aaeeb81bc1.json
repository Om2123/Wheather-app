{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\weather app\\\\my-app\\\\src\\\\compo\\\\WeatherApi.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherApi = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const city = \"New york\";\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        // Replace {API key} with your actual OpenWeatherMap API key\n        const apiKey = '09b8e023b1a6da1f4251f2149fc8d14a';\n        const apkey = '33673353c58ee88f3119771df82a2f85';\n        const city = \"mumbai\";\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apkey}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch weather data');\n        }\n        const data = await response.json();\n        setWeatherData(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchWeatherData();\n  }, []);\n  if (!weatherData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherApi, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = WeatherApi;\nexport default WeatherApi;\nvar _c;\n$RefreshReg$(_c, \"WeatherApi\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherApi","_s","weatherData","setWeatherData","city","fetchWeatherData","apiKey","apkey","response","fetch","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/weather app/my-app/src/compo/WeatherApi.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst WeatherApi = () => {\r\n\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const city = \"New york\";\r\n    useEffect(() => {\r\n        const fetchWeatherData = async () => {\r\n          try {\r\n            // Replace {API key} with your actual OpenWeatherMap API key\r\n            const apiKey = '09b8e023b1a6da1f4251f2149fc8d14a';\r\n            const apkey = '33673353c58ee88f3119771df82a2f85';\r\n            const city = \"mumbai\";\r\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apkey}`);\r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch weather data');\r\n            }\r\n            const data = await response.json();\r\n            setWeatherData(data);\r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n        };\r\n        fetchWeatherData();\r\n      }, []);\r\n\r\n    if (!weatherData) {\r\n        return <div>Loading...</div>;\r\n    }\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeatherApi;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMQ,IAAI,GAAG,UAAU;EACvBP,SAAS,CAAC,MAAM;IACZ,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF;QACA,MAAMC,MAAM,GAAG,kCAAkC;QACjD,MAAMC,KAAK,GAAG,kCAAkC;QAChD,MAAMH,IAAI,GAAG,QAAQ;QACrB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,qDAAoDL,IAAK,uBAAsBG,KAAM,EAAC,CAAC;QACrH,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QAClCV,cAAc,CAACS,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDT,gBAAgB,EAAE;EACpB,CAAC,EAAE,EAAE,CAAC;EAER,IAAI,CAACH,WAAW,EAAE;IACd,oBAAOH,OAAA;MAAAiB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAChC;EACA,oBACIrB,OAAA;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEM;AAEd,CAAC;AAAAnB,EAAA,CAhCKD,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AAkChB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}